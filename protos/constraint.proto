syntax = "proto3";

package typecheck;

import "type.proto";
option cc_enable_arenas = false;

message KnownProtocolKind {


	oneof kind {
		DefaultProtocol default = 1;
		LiteralProtocol literal = 2;
	}
}

message Constraint {
	ConstraintKind kind = 1;
	ConstraintRestrictionKind restriction = 2;

	bool hasRestriction = 3;
	bool isActive = 4;
	bool isDisabled = 5;
	bool isFavoured = 6;

	int64 id = 7;
	repeated int64 nested = 8; // ID's of nested constraints

	message Types {
		typecheck.TypeVar first = 1;
		typecheck.TypeVar second = 2;
		// typecheck.TypeVar third = 3;
	}

	message ExplicitType {
		typecheck.TypeVar var = 1;
		typecheck.Type type = 2;
	}

	message Member {
		typecheck.TypeVar first = 1;
		typecheck.TypeVar second = 2;
//		oneof {
//			int64 declContextPtr = 3; // Pointer to the declaration context
//		}
	}

	message Overload {
		typecheck.TypeVar type = 1;
		int64 functionID = 2;
		repeated typecheck.TypeVar argVars = 3;
		typecheck.TypeVar returnVar = 4;
//		int64 declContextPtr = 3; // Pointer to the declaration context
	}

	message Conforms {
		KnownProtocolKind protocol = 1;
		typecheck.TypeVar type = 2;
	}

	oneof constraint {
		Types types = 9;
		Member member = 10;
		Overload overload = 11;
		Conforms conforms = 12;
		ExplicitType explicit = 13;
	}
};
